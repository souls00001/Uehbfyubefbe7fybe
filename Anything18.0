-- Services 
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Ensure RemoteEvent exists for server teleport
if not ReplicatedStorage:FindFirstChild("TeleportEvent") then
    local teleportEvent = Instance.new("RemoteEvent")
    teleportEvent.Name = "TeleportEvent"
    teleportEvent.Parent = ReplicatedStorage
end

local player = game.Players.LocalPlayer
local movementSpeed = 16 -- Speed in studs per second
local isActive = false -- Track if the script is active or not

local locations = {
    {position = Vector3.new(-479, 4, -436), item = nil, waitTime = 5, pressE = true},  
    {position = Vector3.new(-463, 4, -448), item = "Potato", waitTime = 5, pressE = true},  
    {position = Vector3.new(-463, 4, -474), item = nil, waitTime = 5, pressE = true},  
    {position = Vector3.new(-467, 4, -475), item = nil, waitTime = 5, pressE = true},  
    {position = Vector3.new(-467, 4, -537), item = nil, waitTime = 2, pressE = false},  
    {position = Vector3.new(-487, 4, -535), item = "Flour", waitTime = 5, pressE = true},  
    {position = Vector3.new(-467, 4, -537), item = nil, waitTime = 3, pressE = false},  
    {position = Vector3.new(-466, 4, -477), item = nil, waitTime = 2, pressE = false},  
    {position = Vector3.new(-520, 4, -474), item = nil, waitTime = 62, pressE = true},  
    {position = Vector3.new(-466, 4, -477), item = nil, waitTime = 2, pressE = false},  
}

-- Function to press "E" once
local function pressEOnce()
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    wait(0.5)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

-- Function to equip an item from the player's inventory
local function equipItem(itemName)
    local backpack = player.Backpack
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name == itemName and item:IsA("Tool") then
            player.Character.Humanoid:EquipTool(item)
            print(itemName .. " equipped!")
            return
        end
    end
    print("No " .. itemName .. " found in the inventory.")
end

-- Function to move the character gradually to target positions
local function moveToTarget(index)
    if not isActive then return end  
    if index > #locations then index = 1 end  -- Reset to 1 after the last location

    local location = locations[index]
    local targetPosition = location.position
    local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    local startPosition = humanoidRootPart.Position
    local distance = (targetPosition - startPosition).magnitude
    local duration = distance / movementSpeed
    local startTime = tick()

    local moveConnection
    moveConnection = RunService.Heartbeat:Connect(function()
        local elapsedTime = tick() - startTime
        if elapsedTime < duration then
            local newPosition = startPosition:Lerp(targetPosition, elapsedTime / duration)
            humanoidRootPart.CFrame = CFrame.new(newPosition)
        else
            humanoidRootPart.CFrame = CFrame.new(targetPosition)
            moveConnection:Disconnect()
            
            if location.item then
                equipItem(location.item)
            end
            
            if location.pressE then
                pressEOnce()  -- Press E at the start of this location
            end
            
            if location.waitTime then
                wait(location.waitTime)
            end

            -- On the third step, move the camera down
            if index == 3 then
                local camera = game.Workspace.CurrentCamera
                local offset = Vector3.new(0, -1, 0)  -- Move the camera 1 stud down
                local targetCFrame = camera.CFrame * CFrame.new(offset)

                local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)  -- 1 second duration
                local tween = TweenService:Create(camera, tweenInfo, {CFrame = targetCFrame})
                tween:Play()
            end

            -- At the 9th location (position -520, 4, -474), press "E" again after wait
            if index == 9 then
                pressEOnce()  -- Press E at the end of this location
            end

            -- After the last location (9th), restart the movement sequence
            if index == #locations then
                print("Sequence complete, restarting...")
                moveToTarget(1)  -- Start from the first location again
            else
                moveToTarget(index + 1)
            end
        end
    end)
end

-- Function to toggle the activity on Z press
local function toggleSequence(input)
    if input.KeyCode == Enum.KeyCode.Z then
        isActive = not isActive  
        if isActive then
            print("Starting movement sequence.")
            moveToTarget(1)  
        else
            print("Stopping movement sequence.")
        end
    end
end

game:GetService("UserInputService").InputBegan:Connect(toggleSequence)

-- Function to remove HoldDuration from all ProximityPrompts
local function modifyProximityPrompts()
    while true do
        for _, instance in ipairs(game:GetService("Workspace"):GetDescendants()) do
            if instance:IsA("ProximityPrompt") then
                instance.HoldDuration = 0
            end
        end
        wait(20)
    end
end

task.spawn(modifyProximityPrompts)
