local players = game:GetService("Players")
local runService = game:GetService("RunService")
local camera = workspace.CurrentCamera
local localPlayer = players.LocalPlayer

local snaplines = {}
local espEnabled = true -- Change this with your UI button

-- Function to create a new snapline
local function createSnapline()
    local line = Drawing.new("Line")
    line.Thickness = 2
    line.Color = Color3.fromRGB(255, 255, 255) -- white
    line.Transparency = 1
    line.Visible = false
    return line
end

-- Function to set ESP state (Call this from your UI button)
local function setESPState(state)
    espEnabled = state
    for _, line in pairs(snaplines) do
        line.Visible = espEnabled
    end
end

-- Update snaplines each frame
runService.RenderStepped:Connect(function()
    if not espEnabled then
        for _, line in pairs(snaplines) do
            line.Visible = false
        end
        return
    end

    for _, player in pairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local screenPosition, onScreen = camera:WorldToViewportPoint(rootPart.Position)

            if not snaplines[player] then
                snaplines[player] = createSnapline()
            end

            local line = snaplines[player]

            if onScreen then
                line.Visible = true
                line.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y) -- Bottom center
                line.To = Vector2.new(screenPosition.X, screenPosition.Y)
            else
                line.Visible = false
            end
        elseif snaplines[player] then
            snaplines[player].Visible = false
        end
    end
end)

-- Example: If you have a UI button, call setESPState(true/false) when clicked
return {
    setESPState(true) = setESPState(false)
}
